module(name = "rtw")

# Toolchain configuration for LLVM.
bazel_dep(name = "toolchains_llvm", version = "1.2.0")

# To directly use a commit from GitHub, replace commit with the commit you want.
# Otherwise, omit this block.
git_override(
  module_name = "toolchains_llvm",
  commit = "6edc43be7e52d9f44bc842a9956bd40213b972b1",
  remote = "https://github.com/bazel-contrib/toolchains_llvm",
)

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "18.1.8",
)

use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

# clang-tidy
bazel_dep(name = "bazel_clang_tidy", dev_dependency = True)
git_override(
    module_name = "bazel_clang_tidy",
    commit = "f23d924918c581c68cd5cda5f12b4f8198ac0c35",
    remote = "https://github.com/erenon/bazel_clang_tidy.git",
)

# Third-party dependencies
bazel_dep(name = "fmt", version = "10.2.1")
bazel_dep(name = "googletest", version = "1.14.0")
bazel_dep(name = "google_benchmark", version = "1.8.3")

# Non BCR third-party dependencies
bazel_dep(name = "cli11", version = "2.4.1")
bazel_dep(name = "imgui", version = "1.90.5-docking")
bazel_dep(name = "implot", version = "0.16-docking")

# sysroot dependencies
sysroot = use_extension("//:extensions.bzl", "sysroot")
sysroot.local_paths(
  path_linux = "/usr",
  path_macos = "/opt/homebrew",
)
#macos: brew install sdl2 sdl2_image
#linux: sudo apt install '^libsdl2.*'
sysroot.declare_library(
  name = "SDL2",
  includes = ["include/SDL2"],
  linkopts_linux = ["-lGL"],
  linkopts_macos = ["-framework OpenGL"],
)
sysroot.declare_library(
  name = "SDL2_image",
  includes = ["include/SDL2"],
)
use_repo(sysroot, "sysroot")
